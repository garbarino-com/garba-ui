// stylelint-disable selector-no-qualifying-type, selector-no-type

// Se agrega la herencia de estas clases para reducir el alcance de los estilos
// y que no afecten a otros inputs sin querer.

.radio,
.radio-inline,
.checkbox,
.checkbox-inline,
.radio-box,
.checkbox-box {
  input[type="radio"],
  input[type="checkbox"] {
    @include prefixer(appearance, none, webkit ms spec);
    background-color: $controler-bg-inactive;
    border: 1px solid $controler-border-inactive;
    display: inline-block;
    height: $controller-size;
    transition: border-color ease-in-out $transition-timing-base;
    width: $controller-size;

    &:focus {
      outline: none;
    }

    &:checked {
      border-color: $controler-active;
    }

    // Elemento que se dibuja cuando se está `:checked`
    &::after {
      @include make-pseudo-element;
      background-color: transparent;
      color: transparent;
      height: $controller-symbol-size;
      line-height: 1;
      margin-left: ($controller-symbol-size / 2) * -1;
      margin-top: ($controller-symbol-size / 2) * -1;
      transition: background-color ease-in-out $transition-timing-base,
      border-color ease-in-out $transition-timing-base,
        color ease-in-out $transition-timing-base;
      width: $controller-symbol-size;
    }
  }



  // Estilos específicos para radiobuttons
  input[type="radio"] {
    border-radius: 50%;

    &::after {
      border-radius: 50%;
    }

    &:checked::after {
      background-color: $controler-active;
    }
  }



  // Estilos específicos para checkbox
  input[type="checkbox"] {
    border-radius: $border-radius-base;

    &::after {
      background: transparent url("data:image/svg+xml;utf8,#{$icon-checked}")
        0 0 no-repeat;
      opacity: 0;
    }

    &:checked::after {
      opacity: 1;
    }
  }
}




// Checkboxes y Radio buttons
//
// Indenta los labels para posicionar los radios/checkboxes como controles flotantes.
//
// .block__is-disabled - Indica que el bloque está deshabilitado *(es conveniente
// agregar el atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad
// de css `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: checkbox-and-radio.hbs
//
// Styleguide Elements.Forms.03-Checkboxes&Radios

.checkbox,
.radio {
  padding-top: $spacer-sm;

  label {
    cursor: pointer;
    display: block;
    font-weight: $font-weight-base;
    margin-bottom: 0;

    // Ensure the input doesn't jump when there is no text
    min-height: $line-height-computed;

    padding-left: $controller-spacer;

    // Cambia el border color en :hover sobre el label

    // stylelint-disable max-nesting-depth
    &:hover {
      > input[type="radio"],
      > input[type="checkbox"] {
        border-color: $controler-active;
      }
    }
    // stylelint-enable max-nesting-depth
  }

  label + label {
    margin-top: $spacer-sm;
  }

  // Define estilos para el bloque deshabilitado.
  [disabled] &,
  [readonly] &,
  fieldset[disabled] &,
  &.block__is-disabled,
  &.block__is-disabled.block__has-error {
    input[type="radio"],
    input[type="checkbox"] {
      cursor: not-allowed;
      opacity: $modifier-opacity-value;
      pointer-events: none;
    }
  }

  // Modifica el valor de display para radios/checkboxes inline y boxed.
  .radio-inline,
  .checkbox-inline {
    display: inline-block;
  }
}

// Posiciona los controles
.radio,
.radio-inline,
.checkbox,
.checkbox-inline,
.radio-box,
.checkbox-box {
  input[type="radio"],
  input[type="checkbox"] {
    margin-left: $controller-spacer * -1;
    margin-top: $spacer-xs;
    position: absolute;

    &::after {
      left: 50%;
      position: absolute;
      top: 50%;
    }
  }
}



// Inline checkboxes y Radios
//
// Agrega la clase `.radio-inline` o `.checkbox-inline` para poner varios checkboxes
// o radios en la misma línea.
//
// .block__is-disabled - Indica que el bloque está deshabilitado *(es conveniente
// agregar el atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad
// de css `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: checkbox-and-radio--inline.hbs
//
// Styleguide Elements.Forms.04-InlineCheckboxes&Radios

.radio-inline,
.checkbox-inline {
  cursor: pointer;
  font-weight: $block-label-font-weight;
  margin-bottom: 0;
  padding-left: $controller-spacer;
  position: relative;
  vertical-align: middle;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-left: $spacer-lg; // space out consecutive inline controls
  margin-top: 0;
}



// Boxed checkboxes y Radios
//
// Agrega la clase `.radio-inline` o `.checkbox-inline` para poner varios checkboxes
// o radios en la misma línea. Esta variante se puede usar junto o como complemento
// de las *Grid-list*'s.
//
// .block__is-disabled - Indica que el bloque está deshabilitado *(es conveniente
// agregar el atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad
// de css `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: checkbox-and-radio--boxed.hbs
//
// Styleguide Elements.Forms.06-BoxCheckboxes&Radios

label.radio-box,
label.checkbox-box {
  @include flex-direction(column);
  @include justify-content(center);
  background-color: $grid-cell-bg;
  border: $grid-cell-border-size solid $grid-cell-border-color;
  border-radius: $border-radius-base;
  cursor: pointer;
  display: inline-flex;
  // La altura sale de sumar padding vertical + los dos line-height * $baseline-grid-computed
  height: ($spacer-sm * 2) + (($line-height-sm * $baseline-grid-computed) * 2 );
  line-height: $line-height-sm;
  max-width: $controller-max-width;
  padding: $spacer-sm;
  padding-left: $controller-boxed-spacer;
  vertical-align: middle;

  &:hover {
    border-color: state-hover-modifier($grid-cell-active);
  }

  > input[type="radio"],
  > input[type="checkbox"] {
    left: ($controller-boxed-spacer - $controller-size) + $spacer-sm;
    margin-top: ($controller-size / 2) * -1;
    top: 50%;
  }



  // Uso de Boxed checkboxes y Radios con imagenes
  //
  // Se pueden usar las clases de *Boxed checkboxes y Radios* con imagenes pero
  // tener en cuenta que esto sólo sirve para imagenes pequeñas (por ej: para
  // mostrar opciones de tarjetas de crédito.)
  //> En caso de ser necesario mostrar imagenes de mayor tamaño es necesario
  // recurrir a los *Grid-list*'s.
  //
  // Markup: checkbox-and-radio--boxed__has-images.hbs
  //
  // Styleguide Elements.Forms.07-BoxCheckboxes&RadiosWImages

  > img {
    border: 1px solid $controller-image-border;
    max-height: $controller-image-max-height;
  }
}

.radio-box + .radio-box,
.checkbox-box + .checkbox-box {
  margin-left: $spacer-xs; // space out consecutive boxed controls
  margin-top: 0;
}



// stylelint-enable selector-no-qualifying-type, selector-no-type
