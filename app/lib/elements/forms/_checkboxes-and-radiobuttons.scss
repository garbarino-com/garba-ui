// stylelint-disable selector-no-qualifying-type, selector-no-type

input[type="radio"],
input[type="checkbox"] {
  @include prefixer(appearance, none, webkit ms spec);
  background-color: $controler-bg-inactive;
  border: 1px solid $controler-border-inactive;
  display: inline-block;
  height: $controller-size;
  transition: border-color ease-in-out $transition-timing-base;
  width: $controller-size;

  &:focus {
    outline: none;
  }

  &:checked {
    border-color: $controler-active;
  }

  // Elemento que se dibuja cuando se está `:checked`
  &::after {
    @include make-pseudo-element;
    background-color: transparent;
    color: transparent;
    height: $controller-symbol-size;
    line-height: 1;
    margin-left: ($controller-symbol-size / 2) * -1;
    margin-top: ($controller-symbol-size / 2) * -1;
    transition: background-color ease-in-out $transition-timing-base,
    border-color ease-in-out $transition-timing-base,
      color ease-in-out $transition-timing-base;
    width: $controller-symbol-size;
  }
}



// Estilos específicos para radiobuttons
input[type="radio"] {
  border-radius: 50%;

  &::after {
    border-radius: 50%;
  }

  &:checked::after {
    background-color: $controler-active;
  }
}



// Estilos específicos para checkbox
input[type="checkbox"] {
  border-radius: $border-radius-base;

  &::after {
    background: transparent url("data:image/svg+xml;utf8,<svg
      xmlns='http://www.w3.org/2000/svg' width='#{$controller-symbol-size}'
      height='#{$controller-symbol-size}' viewBox='0 0 10 8'><path
      fill='#{$controler-active}' d='M10,1.49677419 C10,1.6688172 9.93978495,1.81505376
      9.81935484,1.93548387 L5.1483871,6.60645161 L4.27096774,7.48387097
      C4.15053763,7.60430108 4.00430108,7.66451613 3.83225806,7.66451613
      C3.66021505,7.66451613 3.51397849,7.60430108 3.39354839,7.48387097
      L2.51612903,6.60645161 L0.180645161,4.27096774 C0.0602150538,4.15053763
      0,4.00430108 0,3.83225806 C0,3.66021505 0.0602150538,3.51397849
      0.180645161,3.39354839 L1.05806452,2.51612903 C1.17849462,2.39569892
      1.32473118,2.33548387 1.49677419,2.33548387 C1.6688172,2.33548387
      1.81505376,2.39569892 1.93548387,2.51612903 L3.83225806,4.41935484
      L8.06451613,0.180645161 C8.18494624,0.0602150538 8.3311828,0 8.50322581,0
      C8.67526882,0 8.82150538,0.0602150538 8.94193548,0.180645161
      L9.81935484,1.05806452 C9.93978495,1.17849462 10,1.32473118
      10,1.49677419 Z'/></svg>") 0 0 no-repeat;
    opacity: 0;
  }

  &:checked::after {
    opacity: 1;
  }
}



// Checkboxes y Radio buttons
//
// Indenta los labels para posicionar los radios/checkboxes como controles flotantes.
//
// .block__is-disabled - Indica que el bloque está deshabilitado *(es conveniente
// agregar el atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad
// de css `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: checkbox-and-radio.hbs
//
// Styleguide Elements.Forms.03-Checkboxes&Radios

.checkbox,
.radio {
  padding-top: $spacer-sm;

  label {
    cursor: pointer;
    display: block;
    font-weight: $font-weight-base;
    margin-bottom: 0;

    // Ensure the input doesn't jump when there is no text
    min-height: $line-height-computed;

    padding-left: $controller-spacer;

    // Cambia el border color en :hover sobre el label

    // stylelint-disable max-nesting-depth
    &:hover {
      > input[type="radio"],
      > input[type="checkbox"] {
        border-color: $controler-active;
      }
    }
    // stylelint-enable max-nesting-depth
  }

  label + label {
    margin-top: $spacer-sm;
  }

  // Define estilos para el bloque deshabilitado.
  [disabled] &,
  [readonly] &,
  fieldset[disabled] &,
  &.block__is-disabled,
  &.block__is-disabled.block__has-error {
    input[type="radio"],
    input[type="checkbox"] {
      cursor: not-allowed;
      opacity: $modifier-opacity-value;
      pointer-events: none;
    }
  }

  // Modifica el valor de display para radios/checkboxes inline y boxed.
  .radio-inline,
  .checkbox-inline {
    display: inline-block;
  }
}

// Posiciona los controles
.radio,
.radio-inline,
.checkbox,
.checkbox-inline,
.radio-box,
.checkbox-box {
  input[type="radio"],
  input[type="checkbox"] {
    margin-left: $controller-spacer * -1;
    margin-top: $spacer-xs;
    position: absolute;

    &::after {
      left: 50%;
      position: absolute;
      top: 50%;
    }
  }
}



// Inline checkboxes y Radios
//
// Agrega la clase `.radio-inline` o `.checkbox-inline` para poner varios checkboxes
// o radios en la misma línea.
//
// .block__is-disabled - Indica que el bloque está deshabilitado *(es conveniente
// agregar el atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad
// de css `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: checkbox-and-radio--inline.hbs
//
// Styleguide Elements.Forms.04-InlineCheckboxes&Radios

.radio-inline,
.checkbox-inline {
  cursor: pointer;
  font-weight: $block-label-font-weight;
  margin-bottom: 0;
  padding-left: $controller-spacer;
  position: relative;
  vertical-align: middle;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-left: $spacer-lg; // space out consecutive inline controls
  margin-top: 0;
}



// Boxed checkboxes y Radios
//
// Agrega la clase `.radio-inline` o `.checkbox-inline` para poner varios checkboxes
// o radios en la misma línea. Esta variante se puede usar junto o como complemento
// de las *Grid-list*'s.
//
// .block__is-disabled - Indica que el bloque está deshabilitado *(es conveniente
// agregar el atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad
// de css `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: checkbox-and-radio--boxed.hbs
//
// Styleguide Elements.Forms.06-BoxCheckboxes&Radios

label.radio-box,
label.checkbox-box {
  @include flex-direction(column);
  @include justify-content(center);
  background-color: $grid-cell-bg;
  border: $grid-cell-border-size solid $grid-cell-border-color;
  border-radius: $border-radius-base;
  cursor: pointer;
  display: inline-flex;
  // La altura sale de sumar padding vertical + los dos line-height * $baseline-grid-computed
  height: ($spacer-sm * 2) + (($line-height-sm * $baseline-grid-computed) * 2 );
  line-height: $line-height-sm;
  max-width: $controller-max-width;
  padding: $spacer-sm;
  padding-left: $controller-boxed-spacer;
  vertical-align: middle;

  &:hover {
    border-color: state-hover-modifier($grid-cell-active);
  }

  > input[type="radio"],
  > input[type="checkbox"] {
    left: ($controller-boxed-spacer - $controller-size) + $spacer-sm;
    margin-top: ($controller-size / 2) * -1;
    top: 50%;
  }



  // Uso de Boxed checkboxes y Radios con imagenes
  //
  // Se pueden usar las clases de *Boxed checkboxes y Radios* con imagenes pero
  // tener en cuenta que esto sólo sirve para imagenes pequeñas (por ej: para
  // mostrar opciones de tarjetas de crédito.)
  //> En caso de ser necesario mostrar imagenes de mayor tamaño es necesario
  // recurrir a los *Grid-list*'s.
  //
  // Markup: checkbox-and-radio--boxed__has-images.hbs
  //
  // Styleguide Elements.Forms.07-BoxCheckboxes&RadiosWImages

  > img {
    border: 1px solid $controller-image-border;
    max-height: $controller-image-max-height;
  }
}

.radio-box + .radio-box,
.checkbox-box + .checkbox-box {
  margin-left: $spacer-xs; // space out consecutive boxed controls
  margin-top: 0;
}



// stylelint-enable selector-no-qualifying-type, selector-no-type
