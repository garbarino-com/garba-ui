// Forms
//
// Styleguide Elements.Forms


// stylelint-disable selector-no-qualifying-type, selector-no-type

// Normalización de elementos
fieldset {
  border: 0;
  margin: 0;

  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;

  padding: 0;
}

legend {
  border: 0;
  color: $gray-dark;
  display: block;
  line-height: inherit;
  margin-bottom: $spacer-base;
  padding: 0;
  width: 100%;
}

label {
  display: inline-block;
  font-weight: $block-label-font-weight;
  margin-bottom: $form-label-spacing;

  // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  max-width: 100%;

  min-height: $block-label-height;
  min-width: 1%;
  position: relative;

  // Indica que el campo de input es requerido.
  .block__is-required & {
    &::after {
      color: $block-is-required;
      content: "*";
      display: inline-block;
      margin-left: $spacer-xs;
    }
  }

  [disabled] &,
  [readonly] &,
  fieldset[disabled] &,
  .control__is-disabled ~ &,
  .block__is-disabled &,
  .block__is-disabled[class*="block__has-"] & {
    cursor: not-allowed;
    opacity: $modifier-opacity-value;
    pointer-events: none;
  }
}

textarea {
  resize: vertical;
}



// Form básico
//
// Los controles de form automaticamente reciben algunos estilos globales. Todos
// los elementos `<input>`, `<textarea>`, and `<select>` con `.form-control` setean
// el ancho a 100% por default. Envuelva los labels y los controles en un elemento
// con la clase `.form-block` para que el espaciado sea el óptimo.
//
// **(Añadí `disabled` al `<fieldset>` para deshabilitar todos los controles de
// una sola vez.)**
//
// > ### Advertencia sobre la funcionalidad de los `<a>`
// Por default, los browsers van a tratar los controles de form nativos (`<input>`,
// `<select>` y `<button>`) dentro de un
// `<fieldset disabled>` como deshabilitados,   interacciones de mouse y de teclado
// con los mismos. Sin embargo, si tu `<form>` incluye también algún
// `<a ... class="button button-*">`, estos sólo van a recibir la propiedad
// `pointer-events: none;`.
// [Esta propiedad no está del todo estandarizada](http://caniuse.com/#feat=pointer-events)
// y no evita que el teclado haga `:focus` o active esos links. Para mayor seguridad
// se recomienda utilizar JavaScript para deshabilitar esos links.
// ### Compatibilidad cross-browser
// Browsers -IE11 no soportan del todo el uso del atributo `disabled` en
// `<fieldset>`s. Para mayor seguridad se recomienda utilizar JavaScript para
// deshabilitar el `<fieldset>`.
//
// .block__is-disabled - El bloque está deshabilitado *(es conveniente agregar el
// atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad de css
// `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__is-required - Agrega un asterico color rojo al `<label>`para señalar
// que es un bloque obligatorio.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: basic-form.hbs
//
// Styleguide Elements.Forms.02-BasicForm

// Bloque contenedor de los forms
.checkbox,
.form-block,
.radio {
  @include form-block($form-block-spacing);
}

// stylelint-enable selector-no-qualifying-type, selector-no-type
