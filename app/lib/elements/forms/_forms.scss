// Forms
//
// Styleguide Elements.Forms


// stylelint-disable selector-no-qualifying-type, selector-no-type

// Normalización de elementos
fieldset {
  border: 0;
  margin: 0;

  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;

  padding: 0;
}

legend {
  border: 0;
  color: $gray-dark;
  display: block;
  line-height: inherit;
  margin-bottom: $spacer-base;
  padding: 0;
  width: 100%;
}

label {
  display: inline-block;
  font-weight: $block-label-font-weight;
  margin-bottom: $form-label-spacing;

  // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  max-width: 100%;

  position: relative;

  // Indica que el campo de input es requerido.
  .block__is-required & {
    &::after {
      color: $block-is-required;
      content: "*";
      display: inline-block;
      margin-left: $spacer-xs;
    }
  }

  [disabled] &,
  [readonly] &,
  fieldset[disabled] &,
  .control__is-disabled ~ &,
  .block__is-disabled &,
  .block__is-disabled[class*="block__has-"] & {
    cursor: not-allowed;
    opacity: $modifier-opacity-value;
    pointer-events: none;
  }
}

textarea {
  resize: vertical;
}



// Form básico
//
// Los controles de form automaticamente reciben algunos estilos globales. Todos
// los elementos `<input>`, `<textarea>`, and `<select>` con `.form-control` setean
// el ancho a 100% por default. Envuelva los labels y los controles en un elemento
// con la clase `.form-block` para que el espaciado sea el óptimo.
//
// **(Añadí `disabled` al `<fieldset>` para deshabilitar todos los controles de
// una sola vez.)**
//
// > ### Advertencia sobre la funcionalidad de los `<a>`
// Por default, los browsers van a tratar los controles de form nativos (`<input>`,
// `<select>` y `<button>`) dentro de un
// `<fieldset disabled>` como deshabilitados,   interacciones de mouse y de teclado
// con los mismos. Sin embargo, si tu `<form>` incluye también algún
// `<a ... class="button button-*">`, estos sólo van a recibir la propiedad
// `pointer-events: none;`.
// [Esta propiedad no está del todo estandarizada](http://caniuse.com/#feat=pointer-events)
// y no evita que el teclado haga `:focus` o active esos links. Para mayor seguridad
// se recomienda utilizar JavaScript para deshabilitar esos links.
// ### Compatibilidad cross-browser
// Browsers -IE11 no soportan del todo el uso del atributo `disabled` en
// `<fieldset>`s. Para mayor seguridad se recomienda utilizar JavaScript para
// deshabilitar el `<fieldset>`.
//
// .block__is-disabled - El bloque está deshabilitado *(es conveniente agregar el
// atributo `disabled` al `<input>`o  al `<fieldset>` ya que la propiedad de css
// `pointer-events:none`
// [no está del todo soportada](http://caniuse.com/#feat=pointer-events))*.
// .block__is-required - Agrega un asterico color rojo al `<label>`para señalar
// que es un bloque obligatorio.
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
//
// Markup: basic-form.hbs
//
// Styleguide Elements.Forms.2-BasicForm

// Bloque contenedor de los forms
.checkbox,
.form-block,
.radio {
  @include form-block($form-block-spacing);
}



// Form Control
//
// Usamos la clase `.form-control` para darle estilos a los elementos de input
// textuales de los *forms*.
//
// *Esta clase puede usar en los siguientes elementos de form:*
// * `select`
// * `textarea`
// * `input[type="text"]`
// * `input[type="password"]`
// * `input[type="datetime"]`
// * `input[type="datetime-local]`
// * `input[type="date"]`
// * `input[type="month"]`
// * `input[type="time"]`
// * `input[type="week"]`
// * `input[type="number"]`
// * `input[type="email"]`
// * `input[type="url"]`
// * `input[type="search"]`
// * `input[type="tel"]`
// * `input[type="color"]`
// > Noten que el `<select>` nativo de Safari y Chrome tiene unos bordes redondeados
// que no se pueden modificar vía la propiedad `border-radius`.
//
// .control__is-disabled - El campo está deshabilitado *(es necesario agregar el atributo
// `disabled` al `<input>` o al `<fieldset>` contenedor)*.
// .form-control--sm - Única variable de tamaño (por el momento). El alto del
// `<input>` está atado al alto de la variable de botón `.button--sm`.
//
// Markup: form-controls.hbs
//
// Styleguide Elements.Forms.1-FormControl

.form-control {
  background-color: $input-bg;

  // Reset unusual Firefox-on-Android default style;
  //see https://github.com/necolas/normalize.css/issues/214
  background-image: none;

  border: 1px solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers,
  // due to the limited stylability of <select>s in CSS.
  border-radius: $border-radius-base;

  color: $input-color;
  display: block;
  font-size: $font-size-base;

  // Make inputs at least the height of their button counterpart
  // (base line-height + padding + border)
  height: $input-height;

  line-height: 1;
  padding: $input-padding;
  transition: border-color ease-in-out $transition-timing-base,
    box-shadow ease-in-out $transition-timing-base;
  width: 100%;

  select#{&} {
    line-height: 1;
  }

  // Placeholder
  @include placeholder;

  // Focus state
  @include form-control-focus;

  &[disabled],
  &[readonly],
  fieldset[disabled] &,
  &.control__is-disabled,
  .block__is-disabled &,
  .block__is-disabled[class*="block__has-"] & {
    @include state-disabled;
  }

  &:-webkit-autofill {
    background-color: inherit !important;
  }
}

// Libera la altura para los `<textarea>`s
textarea,
select[multiple] {
  &.form-control {
    height: auto;
  }
}


// Form horizontal
//
// El form horizontal está construído sobre las clases de grilla y permite crear
// forms con labels e input en la misma línea.
// > En caso de querer usar la variante `.form-control--sm` se debe agregar la
// clase `.control-label--sm` al `<label>` con clase `.control-label`.
//
// .block__has-error - Se incluyen estilos de validación para estado de `error`.
// **Advertencia:** Este es un caso de uso del estado `error` diferente de los
// otros ya que tanto el `input` como los elementos de feedback: ícono
// (`.block-validation--feedback`) y mensaje (`.block-validation--note`) están a
// un nivel más de profundidad en el árbol del DOM.
//
// Markup: form-horizontal.hbs
//
// Styleguide Elements.Forms.5-FormHorizontal

.form-horizontal {
  // Make form groups behave like rows
  .form-block {
    @include make-row;
  }

  // Reset spacing and right align labels, but scope to media queries so that
  // labels on narrow viewports stack the same as a default form example.
  .control-label {
    display: block;
    margin-bottom: $spacer-sm;

    @media (min-width: $screen-md-min) {
      line-height: 1;
      margin-bottom: 0;
      padding-top: $spacer-base;
    }
  }

  .control-label--sm {
    font-size: $font-size-sm;
    margin-bottom: $spacer-xs;
    padding-top: $spacer-sm;
  }
}



// Small input variant
@include input-size(".form-control--sm", $font-size-sm, $block-size-sm, $spacer-sm);

// stylelint-enable selector-no-qualifying-type, selector-no-type
