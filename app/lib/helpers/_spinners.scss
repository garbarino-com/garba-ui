// @generate-loading-state-for-element($size, $overlayColor, $startPointVertical)
//
// Usa `pseudo-elementos` para generar un overlay y un spinner centrado dentro
// del elemento contenedor.
//
// $size - Tamaño del spinner. Acepta dos valores: `"medium"` o `"large"`
// $overlayColor - Color de fondo del overlay. Default: Blanco
// $startPointVertical - El punto de orígen vertical del overlay. Default: 0
//
// Styleguide Helpers.States.GenerateLoaderElement

@mixin generate-loading-state-for-element(
  $size,
  $overlayColor: $spinner-bg,
  $startPointVertical: 0
) {
  @include clearfix;

  // Agrega position:relative al elemento contenedor para poder posicionar los
  // child elements.
  position: relative;

  // Inicializar variables para que estén disponibles para su posterior uso.
  $spinner-variant: null;
  $spinner-size: null;

  // Definir las diferentes variables de tamaño para los spinners
  @if $size == "large" {
    $spinner-variant: $spinner-element-lg;
    $spinner-size: $spinner-lg-size;
  } @else if $size == "medium" {
    $spinner-variant: $spinner-element-md;
    $spinner-size: $spinner-md-size;
  }

  &::before,
  &::after {
    @include make-pseudo-element;
    position: absolute;
  }

  // Elemento del Overlay
  &::before {
    background-color: $overlayColor;
    bottom: 0;
    left: 0;
    opacity: $modifier-scale-value;
    right: 0;
    top: $startPointVertical;
  }

  &::after {
    background-image: url(#{$images-url}#{$spinner-variant});
    background-position: center top;
    background-repeat: no-repeat;
    height: $spinner-size;
    left: 50%;
    margin-left: ($spinner-size / 2) * -1;
    margin-top: ($spinner-size / 2) * -1;
    text-align: center;
    top: 50%;
    width: $spinner-size;
  }
}



// @append-spinner-to-element($size)
//
// Agrega un spinner mediano en un elemento.
//
// $size - Tamaño del spinner.
//
// Styleguide Helpers.States.AppendSpinnerToElement

@mixin append-spinner-to-element($size) {
  @include make-pseudo-element;
  background-image: url(#{$images-url}spinner--md.svg);
  display: block;
  height: $size;
  width: $size;
}
