// Utilities
//
// Styleguide Helpers.Utilities

// @hide-element
//
// Cambia el valor de display` y `visibility` para esconder un elemento.
//
// Styleguide Helpers.Utilities.HideElement

// stylelint-disable rule-empty-line-before, selector-no-type

@mixin hide-element {
  @if $allow-use-of-important {
    display: none !important;
    visibility: hidden !important;
  } @else {
    display: none;
    visibility: hidden;
  }
}

// @show-element
//
// Cambia el valor de display` y `visibility` para mostrar un elemento.
//
// $display - Valor de `display` seteado en `block` por default.
//
// Styleguide Helpers.Utilities.ShowElement

@mixin show-element($display: block) {
  @if $allow-use-of-important {
    display: $display !important;
    visibility: visible !important;
  } @else {
    display: $display;
    visibility: visible;
  }
}

// @hide-element-simple
//
// Cambia el valor de display` y `visibility` y esconde un elemento.
//
// Styleguide Helpers.Utilities.HideElementSimple

@mixin hide-element-simple {
  @if $allow-use-of-important {
    visibility: hidden !important;
  } @else {
    visibility: hidden;
  }
}

// stylelint-enable rule-empty-line-before, selector-no-type

// @make-pseudo-element($display)
//
// Le agrega una serie de atributos a un pseudo-elemento que permiten utilizarlo
// luego como un elemento de DOM.
//
// $display - Valor de `display` seteado en `block` por default.
//
// Styleguide Helpers.Utilities.MakePseudoElement

@mixin make-pseudo-element($display: block) {
  content: "";
  display: $display;
}


// @text-hide
//
// Esconder el texto dentro de un elemento.
//
// Styleguide Helpers.Utilities.TextHide

@mixin text-hide() {
  background-color: transparent;
  border: 0;
  color: transparent;
  font: 0/0 a;
  text-shadow: none;
}
