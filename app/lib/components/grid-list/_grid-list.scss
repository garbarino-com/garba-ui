// Grid List
//
// *Grid-list* es una adaptación del
// [componente material](https://material.io/guidelines/components/grid-lists.html).
// Es una alternativa a la lista común. Un grupo de celdas de forma cuadrada
// organizadas en forma horizontal.
//
// Las *Grid-lists* sirven se usan para tipos de datos similares. Ayudan a mejorar
// la comprensión visual de los datos que agrupan.
//
// > Los ítems que componen las *Grid-lists* tienen un ancho fijado que se asigna
// automáticamente de acuerdo a la cantidad de siblings que hayan en la misma fila
// (máximo 6).
//
// Los ítems que componen la lista se usan con la clase `.list-grid-item` salvo
// cuando se utiliza con imagenes, en cuyo caso se debe utilizer el elemento
// *Image Container*.
//
// Markup: grid-list.hbs
//
// Styleguide Components.GridList

.list-grid {
  @include clearfix;
  margin-bottom: 0;
  margin-left: ($grid-cell-spacer / 2) * -1;
  margin-right: ($grid-cell-spacer / 2) * -1;
  width: 100%;

  // Agrega espacio entre .list-grid adyacentes.
  & + & {
    margin-top: ($grid-cell-spacer / 4);
  }

  // Setea el margin-bottom para el último sibling

  // TODO(ecalvi): Este espaciado no parece estar funcionando cuando el elemento
  // es uno solo. Si funciona cuando hay varias list-grids juntas.

  &:last-of-type,
  &:only-of-type {
    margin-bottom: $spacer-lg;
  }
}

.list-grid-item {
  @include align-items(center);
  @include display(flex);
  @include element-aspect-ratio;
  @include flex-direction(row);
  @include justify-content(center);
  line-height: $line-height-sm;
  padding-left: ($grid-cell-spacer / 2);
  padding-right: ($grid-cell-spacer / 2);

  &::after {
    @include make-pseudo-element;
    background-color: $grid-cell-bg;
    border: $grid-cell-border-size solid $grid-cell-border-color;
    border-radius: $border-radius-base;
    bottom: ($grid-cell-spacer / 2);
    left: ($grid-cell-spacer / 2);
    position: absolute;
    right: ($grid-cell-spacer / 2);
    top: ($grid-cell-spacer / 2);
    transition: border-color ease-in-out $transition-timing-base;
  }

  // Setea el ancho a los elementos en viewports >768px
  @media only screen and (min-width: $screen-md-min) {
    @include set-width-based-on-siblings-count($grid-cell-max-number);
    float: left;
  }
}



// Grid List con links
//
// Agregale links a las *Grid-list* usando tags `<a>` o `<button>`en vez de
// `<li>` o `<div>` (eso también implica que el elemento padre debería ser un
// `<div>` en lugar de un `<ul>`.
//
// :hover - Cuando el mouse se desliza sobre el botón.
// :focus - Cuando es presionado.
// .item__is-checked - Indica que el ítem fue seleccionado.
// .item__is-disabled - Estado deshabilitado.
//
// Markup: grid-list-linked.hbs
//
// Styleguide Components.GridList.1-LinkedGridList

// stylelint-disable selector-no-qualifying-type, selector-no-type
a.list-grid-item,
button.list-grid-item,
label.list-grid-item {
  background: transparent;
  border: 0;
  color: $grid-cell-active;
  cursor: pointer;
  margin-bottom: 0;

  &:hover {
    text-decoration: none;

    &::after {
      border-color: state-hover-modifier($grid-cell-active);
      color: state-hover-modifier($grid-cell-active);
    }
  }

  &:focus {
    outline: 0;

    &::after {
      border-color: state-focus-modifier($grid-cell-active);
      color: state-focus-modifier($grid-cell-active);
    }
  }

  // Disabled state
  &:disabled,
  [disabled],
  [readonly],
  [disabled] &,
  [readonly] &,
  &.item__is-disabled {
    cursor: $brand-disabled-cursor;
    opacity: $modifier-opacity-value;
    pointer-events: none;

    &::after {
      background-color: $btn-disabled-bg;
      border-color: $btn-disabled-color;
      color: $btn-disabled-color;
    }

    > .list-grid-item__body {
      color: $btn-disabled-color;
    }
  }

  input {
    @include make-checked-element(
      $grid-cell-active,
      $text-inverse,
      1.5rem,
      ($grid-cell-spacer / 2)
    );
  }
}



// Grid List con íconos
//
// Las *Grid-list* vienen con unos estilos para ícono preseteados como se ve en
// este ejemplo. También traen preseteados estilos para posicionar botones.
// > **Advertencia**: *Grid-list* no son un *Cards* que serán definido en otro lado.
// Si bien se incluyen estilos para texto, íconos y botones internos, la idea de
// este componente es que no contenga demasiada información. En el caso de ser
// necesario mostrar demasiada información se recomienda recurrir a las *Cards*.
//
// Markup: grid-list-with-icons.hbs
//
// Styleguide Components.GridList.2-IconGridList

.list-grid-item__body {
  @include flex(1);
  padding: $grid-cell-spacer * 2;
  text-align: center;
  vertical-align: middle;
  z-index: $zindex-element;
}



// Grid List con checkboxes
//
// Las Grid-lists pueden usarse dentro para checkboxes dentro de un form para
// seleccionar entre un set de ítems que puede contener textos o imagenes.
//
// Markup: grid-list-with-checkboxes.hbs
//
// Styleguide Components.GridList.3-CheckboxGridLists
.item__is-checked {
  &::after {
    border-color: state-hover-modifier($grid-cell-active);
    color: state-hover-modifier($grid-cell-active);
  }
}



// stylelint-enable selector-no-qualifying-type, selector-no-type
