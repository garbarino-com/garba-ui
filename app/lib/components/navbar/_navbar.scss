// Barra de navegación
//
// Un `.navbar` es una sección de interfase gráfica que tiene como propósito ayudar
// al usuario a acceder información.
//
// ### Los ítems de navegación tienen estado `disabled`###
// Este estado se les puede dar:
// * Usando la clase de estado de botón `.button__is-disabled`
// * Poniéndole al ítem el atributo `disabled`.
// * O bien (de ser necesario), poniéndole `disabled` al `.navbar` padre.
//
// ** Todas variables de navbar en viewports *≥768px* se convierten en
// `.navbar__stacked`.**
//
// > ### Para mejorar la accesibilidad de los `.navbar`s que se usan para navegación ###
// Si estás usando `.navbar`s como barras de navegación del sitio, acordate de agregar
// `role="navigation"`al contenedor padre más pertinente del `<ul>`, o envolvé toda
// la navegación en un tag `<nav>`. No le pongas el `role` al `<ul>`, porque esto
// evitaría que sea indexado como una lista por tecnologías de asistencia.
//
// :disabled - La barra de navegación está deshabilitada. También se puede
// deshabilitar usando `[disabled]` o bien deshabilitando cada ítem por separado
// asignando `.button__is-disabled` o `disabled`.
// .navbar__justified - Esta variable ocupa el ancho y distribute el ancho entre
// los ítems de manera uniforme en anchos *≥768px*. Esta variable sólo funciona
// adentro de un `<ul>` porque necesita a los `<li>`'s que contengan los `<a>`'s
// o `<button>`'s para mostrarse correctamente.
// .navbar__stacked - En esta variable de .navbar, los ítems se apilan verticalmente.
//
// Markup: navbar.hbs
//
// Styleguide Components.Navbar




// stylelint-disable selector-no-qualifying-type, selector-no-type, max-nesting-depth

.navbar {
  @include list-unstyled;
  font-size: 0;
  margin-bottom: $spacer-lg;
  width: 100%;

  > li {
    white-space: nowrap;
  }

  > a,
  > button,
  > li > a,
  > li > button {
    @include button-size($btn-base-padding-x, $btn-height-base, $font-size-base);
    background-color: $navbar-bg;
    border: 0;
    border-bottom: 1px solid transparent;
    color: $navbar-color;
    cursor: pointer;
    display: block;
    overflow: hidden;
    position: relative;

    &::before {
      @include make-pseudo-element;
      animation: navbar-vertical--mouseOut-animation ($transition-timing-slow / 4) ease-in;
      background-color: $navbar-pointer-color;
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      transform: $navbar-vertical-mouseout-animation;
      width: $navbar-pointer-height;
    }

    // Hover & Focus state
    &:hover,
    &:focus {
      &::before {
        background-color: $navbar-pointer-hover-color;
      }
    }

    &:focus {
      outline: 0;
    }

    // Mueve la barra de la izquierda hacia abajo del botón en viewports ≥768px
    @media only screen and (min-width: $screen-md-min) {
      border-bottom: 0;
      border-right: 1px solid transparent;

      &::before {
        @include make-pseudo-element;
        animation: navbar--mouseOut-animation ($transition-timing-slow / 4) ease-in;
        bottom: 0;
        height: $navbar-pointer-height;
        right: 0;
        top: initial;
        transform: $navbar-mouseout-animation;
        width: 100%;
      }
    }
  }

  // Hover state
  > a:hover,
  > button:hover,
  > li > a:hover,
  > li > button:hover {
    &::before {
      animation: navbar-vertical--mouseOver-animation ($transition-timing-slow / 4) ease-in;

      // Estilos para `:hover` y `.active` en viewports ≥768px
      @media only screen and (min-width: $screen-md-min) {
        animation: navbar--mouseOver-animation ($transition-timing-slow / 4) ease-in;
      }
    }
  }

  // Active state
  > a:hover,
  > button:hover,
  > li > a:hover,
  > li > button:hover,
  > a.active,
  > button.active,
  > li > a.active,
  > li > button.active,
  > li.active > a,
  > li.active > button {
    text-decoration: none;

    &::before {
      transform: $navbar-vertical-mouseover-animation;
    }

    // Estilos para `:hover` y `.active` en viewports ≥768px
    @media only screen and (min-width: $screen-md-min) {
      &::before {
        bottom: 0;
        transform: $navbar-mouseover-animation;
      }
    }
  }

  // Active state
  > a.active,
  > button.active,
  > li > a.active,
  > li > button.active,
  > li.active > a,
  > li.active > button {
    cursor: default;

    &::before {
      background-color: $navbar-pointer-active-color;
    }
  }

  > a,
  > button {
    text-align: left;
    width: 100%;

    // Setea inline los items en viewports ≥768px
    @media only screen and (min-width: $screen-md-min) {
      display: inline-block;
      text-align: center;
      width: auto;
    }
  }

  // Setea inline los items en viewports ≥768px
  @media only screen and (min-width: $screen-md-min) {
    > li {
      display: inline-block;
    }

    > li > a,
    > li > button {
      display: block;
    }
  }

  // Disabled State
  &:disabled > a,
  &:disabled > button,
  &:disabled > li > a,
  &:disabled > li > button,
  &[disabled] > a,
  &[disabled] > button,
  > a[disabled],
  > button[disabled],
  > li > a[disabled],
  > li > button[disabled],
  > a.button__is-disabled,
  > button.button__is-disabled,
  > li > a.button__is-disabled,
  > li > button.button__is-disabled {
    &,
    &:hover {
      background-color: $btn-disabled-bg;
      color: $btn-disabled-color;
      cursor: not-allowed;

      &::before {
        animation: none;
        background-color: $navbar-pointer-color;

        // Cambia el transform en viewports ≥768px
        @media only screen and (min-width: $screen-md-min) {
          transform: $navbar-mouseout-animation;
        }
      }
    }
  }
}

// Activa estas dos clases en viewports ≥768px
@media only screen and (min-width: $screen-md-min) {
  .navbar__justified {
    > li,
    > a,
    > button {
      display: table-cell;
      width: 1%;
    }

    > li > a,
    > li > button {
      text-align: center;
      width: 100%;
    }
  }

  .navbar__stacked {
    > li,
    > a,
    > button,
    > li > a,
    > li > button {
      display: block;
      text-align: left;
      width: 100%;
    }

    > a,
    > button,
    > li > a,
    > li > button {
      border-bottom: 1px solid transparent;

      &::before {
        animation: navbar-vertical--mouseOut-animation ($transition-timing-slow / 4) ease-in;
        height: 100%;
        right: initial;
        top: 0;
        transform: $navbar-vertical-mouseout-animation;
        width: $navbar-pointer-height;
      }

      &:hover,
      &.active {
        &::before {
          animation: navbar-vertical--mouseOver-animation ($transition-timing-slow / 4) ease-in;
          transform: $navbar-vertical-mouseover-animation;
        }
      }
    }

    [class^="icon-"] {
      margin-right: $spacer-sm;
    }

    // Disabled State
    &:disabled > a,
    &:disabled > button,
    &:disabled > li > a,
    &:disabled > li > button,
    &[disabled] > a,
    &[disabled] > button,
    > a[disabled],
    > button[disabled],
    > li > a[disabled],
    > li > button[disabled],
    > a.button__is-disabled,
    > button.button__is-disabled,
    > li > a.button__is-disabled,
    > li > button.button__is-disabled {
      &,
      &:hover {
        &::before {
          transform: $navbar-vertical-mouseout-animation;
        }
      }
    }
  }
}


// Barra de navegación con íconos
//
// Un `.navbar` es una sección de interfase gráfica que tiene como propósito ayudar
// al usuario a acceder información.
//
// Markup: navbar-with-icons.hbs
//
// Styleguide Components.Navbar.NavbarWithIcons

.navbar__with-icons {
  > a,
  > button,
  > li > a,
  > li > button {
    height: auto;

    // Cambia como se muestran los íconos en viewports ≥768px
    @media only screen and (min-width: $screen-md-min) {
      height: $btn-height-base + $spacer-sm + $icon-size-xl + $spacer-lg;
      text-align: center;
    }
  }

  [class^="icon-"] {
    animation: navbar-icon--mouseOut-animation ($transition-timing-slow / 4) ease-in;
    margin-right: $spacer-sm;
    transform: $navbar-icon-mouseout-animation;

    // Cambia como se muestran los íconos en viewports ≥768px
    @media only screen and (min-width: $screen-md-min) {
      display: block;
      font-size: $icon-size-xl;
      margin-bottom: $spacer-sm;
      margin-left: auto;
      margin-right: auto;
      margin-top: $spacer-lg;
      text-align: center;
    }
  }


  // Hover State
  a:hover,
  button:hover {
    > [class^="icon-"] {
      animation: navbar-icon--mouseOver-animation ($transition-timing-slow / 4) ease-in;
      transform: $navbar-icon-mouseover-animation;
    }
  }
}

// stylelint-enable selector-no-qualifying-type, selector-no-type, max-nesting-depth
